<?xml version="1.0" encoding="utf-8"?>
<persistence>

<!--
Some of the settings can be set as global defaults in the <persistence>
level, as well as specifically within the <layer> sections, overriding
the global default for that layer.

These settings are:

* restricted-users : a list of user login names that will never be taken from
      any other persistence layer than the database and not be synchronized
      with data from any other layer. You will usually want to have system
      users here.
      The default is "root,service,postman,guest".

* restricted-groups : a list of group names that will never be taken from
      any other persistence layer than the database and not be synchronized
      with data from any other layer. You will usually want to have system
      groups here that you don't want to be configurable through e.g. LDAP.
      The default is "admin,coder,steam,PrivGroups,WikiGroups,help,everyone".

* whitelist-users : a list of user login names that are the only ones
      allowed to login. No other logins will be authorized to login and
      other logins will not be created from persistence layers. The
      restricted users (see above) are always considered to be whitelisted.
      If the whitelist-users setting is not set (or empty), then whitelists
      won't be used for users (allowing any user names). This is the default
      behaviour.

* whitelist-groups : a list of group names that are the only ones to be
      created from persistence layers. The restricted groups (see above) are
      always considered to be whitelisted.
      If the whitelist-groups setting is not set (or empty), then whitelists
      won't be used for groups (allowing any group names). This is the default
      behaviour.

* dont-create-exits : "true": don't create an exit to the group
      workroom when a user is added to a group through a persistence layer,
      "false": an exit is created in the user's workroom that leads to the
      workroom of the group the user was added to.
      The default is "false", so exits will be created.

* user-disappeared : specify the action to take when a user disappears
      from a persistence layer:
      * "deactivate": deactivate the user account by setting an invalid
        password
      * "delete": delete the user object from all layers
      * "ignore": do nothing.
      You can also add "warn" (separated by a comma) to have the persistence
      manager send an email to the maintainer of that persistence layer,
      notifying about the action that has been taken.

* user-reappeared : specify the action to take when a disappeared user
      reappears in a namespace he disappeared from:
      * "reactivate": reactivate the user account by restoring the password
      * "delete": delete the deactivated user account and create a new one
      * "ignore": do noting.
      You can also add "warn" (separated by a comma) to have the persistence
      manager send an email to the maintainer of that persistence layer,
      notifying about the action that has been taken.

* group-disappeared : specify the action to take when a group disappears
      from a persistence layer:
      * "delete": delete the group from all layers,
      * "ignore": do nothing.
      You can also add "warn" (separated by a comma) to have the persistence
      manager send an email to the maintainer of that persistence layer,
      notifying about the action that has been taken.

* maintainer : the name of a user or group in the sTeam server, to which
      to send notification emails, e.g. when the "warn" option is used in
      one of the other settings. This can be a single name or several
      names separated by commas.


There are also some settings that are only valid in the <layer> sections:
(NOTE: in steam-2_2 most of these are ignored, most stuff is still hardcoded
there)

* name : (required) the name for the persistence layer
* type : (required) the type of the persistence layer, which basically
      determines which module to use
-->

<!-- strictly global options (will not be overidden in <layer> sections: -->
<restricted-users>root,service,postman,guest</restricted-users>
<restricted-groups>admin,coder,steam,PrivGroups,WikiGroups,help,everyone</restricted-groups>
<whitelist-users></whitelist-users>
<whitelist-groups></whitelist-groups>

<!-- global defaults: (may be overidden in the <layer> sections: -->
<dont-create-exits>false</dont-create-exits>
<user-disappeared>ignore</user-disappeared>
<user-reappeared>ignore</user-reappeared>
<group-disappeared>ignore</group-disappeared>
<maintainer>admin</maintainer>

<!-- MySQL database layer (the main layer of the server): -->
<layer>
  <name>database</name>
  <type>mysql</type>
  <priority>0</priority>
  <!-- <mirror><content><path>/home/steam/content</path></content></mirror> -->
</layer>

<!-- LDAP layer (for managing users and groups): -->
<layer>
  <name>ldap</name>
  <type>ldap</type>
  <objects>user,group</objects>
  <priority>100</priority>
  <user-disappeared>deactivate</user-disappeared>
  <user-reappeared>reactivate</user-reappeared>
</layer>

<content>
  <!-- set the database tag to "off" if you don't want to store content in the database: -->
  <database>on</database>

  <!-- leave the filesystem tag empty if you don't want to store content in the filesystem: -->
  <!-- store content directly in the content/ folder in the sandbox (make sure not to delete it!):
  <filesystem>
    <sandbox>on</sandbox>
  </filesystem>
  -->
  <!-- mount a directory to be used as a content filesystem:
  <filesystem>
    <mount>/bin/mount --bind -o user=$user /home/steam/content $destdir</mount>
    <unmount>unmount $destdir</unmount>
  </filesystem>
  -->
</content>

</persistence>
